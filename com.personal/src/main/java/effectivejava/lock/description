锁流程：
获取锁
1、Lock.get()
释放锁
2、Lock.release()

乐观并非控制（乐观锁）
这种方法被关系型数据库广泛使用，它假定有变更冲突可能发生，因此阻塞访问资源以防止冲突。
一个典型的例子是读取一行数据之前先将其锁住，确保只有放置锁的线程能够对这行数据进行修改。

悲观并发控制（悲观锁）
假定冲突是不可能发生的，并且不会阻塞正在尝试的操作。
然而，如果源数据在读写当中被修改，更新将会失败。应用程序接下来将决定该如何解决冲突。
例如，可以重试更新、使用新的数据、或者将相关情况报告给用户。